document.addEventListener("DOMContentLoaded",()=>{const e=document.getElementById("latency-chart-svg"),t=document.getElementById("inference-chart-container");if(e&&t){const n=n=>{if(!n.graphs||!n.graphs.latency_history||!n.graphs.inference_by_model)return void console.error("Dados do gráfico não encontrados no arquivo JSON.");(e=>{const t=e;let n=`M 0,${150-e[0]}`;for(let o=0;o<e.length-1;o++){const a=o*472/(e.length-1),s=150-t[o],r= (o+1)*472/(e.length-1),c=150-t[o+1],l=(a+r)/2;n+=` Q ${a},${s} ${l},${(s+c)/2}`}const o=document.createElementNS("http://www.w3.org/2000/svg","path"),a=document.createElementNS("http://www.w3.org/2000/svg","path"),s=`${n} V 150 H 0 Z`;o.setAttribute("d",n),o.setAttribute("stroke","#4a90e2"),o.setAttribute("stroke-width","2"),o.setAttribute("fill","none"),o.setAttribute("stroke-linecap","round"),a.setAttribute("d",s),a.setAttribute("fill","url(#paint0_linear_area)"),e.innerHTML="",e.appendChild(a),e.appendChild(o)})(n.graphs.latency_history),(n=>{const o=t;o.innerHTML="";const a=Math.max(...n.map(e=>e.time),1);n.forEach(e=>{const t=e.time/a*100,n=`
                    <div class="flex flex-col items-center gap-2">
                        <div class="w-full bg-[#30363d] rounded-t-sm" style="height: 100%;">
                            <div class="h-full w-full bg-[#4a90e2] rounded-t-sm" style="height: ${t}%;"></div>
                        </div>
                        <p class="text-gray-400 text-xs text-center">${e.model}</p>
                    </div>
                `;o.insertAdjacentHTML("beforeend",n)})})(n.graphs.inference_by_model)};fetch("uptime-data.json?cache_bust="+Date.now()).then(e=>e.ok?e.json():Promise.reject("Failed to load uptime data")).then(e=>n(e)).catch(e=>console.error("Erro ao renderizar gráficos:",e))}});
