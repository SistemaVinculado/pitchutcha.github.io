name: Fetch UptimeRobot Stats & Metrics

on:
  workflow_dispatch: # Permite iniciar manualmente
  schedule:
    - cron: '0 */1 * * *' # Roda a cada hora para dados mais frescos

jobs:
  fetch-data:
    runs-on: ubuntu-latest
    permissions:
      contents: write # Permissão para fazer commit no repositório
    steps:
      - name: Check out repo
        uses: actions/checkout@v4

      - name: Generate Simulated Metrics
        run: |
          set -e
          LATENCY=$((RANDOM % 40 + 20)); INFERENCE=$((RANDOM % 150 + 100)); ERROR_RATE=$(printf "0.0%d" $((RANDOM % 5 + 1)))
          jq -n \
            --arg latency "${LATENCY}ms" --arg inference "${INFERENCE}ms" --arg error_rate "${ERROR_RATE}%" \
            '{"metrics": {"api_latency": $latency, "inference_time": $inference, "error_rate": $error_rate}}' > metrics.json

      - name: Fetch UptimeRobot data
        run: |
          # Tenta buscar os dados do UptimeRobot. Se falhar, cria um arquivo JSON vazio para não quebrar o workflow.
          curl --request POST 'https://api.uptimerobot.com/v2/getMonitors' \
          --header 'Content-Type: application/x-www-form-urlencoded' \
          --data-urlencode "api_key=${{ secrets.UPTIMEROBOT_API_KEY }}" \
          --data-urlencode "monitors=801334653" \
          --data-urlencode "custom_uptime_ratios=1-7-30" \
          --data-urlencode "logs=1" \
          --data-urlencode "logs_limit=50" \
          --data-urlencode "response_times=1" \
          --data-urlencode "response_times_limit=90" \
          --data-urlencode "response_times_average=1440" \
          --data-urlencode "format=json" \
          -o uptime.json || echo '{"stat": "fail"}' > uptime.json

      - name: Combine Metrics and Uptime data
        run: |
          # Cria um JSON base com estrutura garantida
          echo '{"monitors": [], "metrics": {"api_latency": "--ms", "inference_time": "--ms", "error_rate": "--%"}}' > base.json
          
          # Mescla os arquivos de forma segura. Dados reais sobrescrevem a base.
          jq -s '.[0] * .[1] * .[2]' base.json metrics.json uptime.json > docs/uptime-data.json

      - name: Commit and push if it changed
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore: Update UptimeRobot data and metrics"
          file_pattern: "docs/uptime-data.json"
