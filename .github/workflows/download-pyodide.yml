name: Download Pyodide Locally

on:
  workflow_dispatch: # Permite iniciar manualmente

jobs:
  download-pyodide:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Check out repo
        uses: actions/checkout@v4

      - name: Create Pyodide vendor directory
        run: mkdir -p docs/js/vendor/pyodide

      - name: Download, Inspect, and Move Pyodide
        run: |
          # 'set -ex' é um modo de depuração. 'e' para o script em qualquer erro, 'x' mostra cada comando.
          set -ex
          
          PYODIDE_VERSION="v0.25.1"
          
          echo "--- 1. Baixando o arquivo de distribuição ---"
          curl -L https://github.com/pyodide/pyodide/releases/download/${PYODIDE_VERSION}/pyodide-dist-${PYODIDE_VERSION}.tar.bz2 -o pyodide-dist.tar.bz2
          
          echo "--- 2. Verificando o arquivo baixado ---"
          ls -l
          
          echo "--- 3. Extraindo o conteúdo (de forma detalhada) ---"
          # O '-v' em 'xvf' é para "verbose", ele vai listar todos os arquivos que extrair
          tar -xvf pyodide-dist.tar.bz2
          
          echo "--- 4. Verificando a estrutura de pastas criada ---"
          # 'ls -R' vai listar todas as pastas e arquivos recursivamente.
          # Isso nos mostrará o caminho exato que foi criado.
          ls -R
          
          echo "--- 5. Movendo os arquivos para o destino ---"
          # Esta é a nossa melhor suposição: que uma pasta 'dist' foi criada.
          # Se o 'ls -R' acima mostrar algo diferente, saberemos como corrigir.
          mv dist/* docs/js/vendor/pyodide/

      - name: Commit Pyodide files
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "feat: Add Pyodide distribution files locally"
          file_pattern: "docs/js/vendor/pyodide"
